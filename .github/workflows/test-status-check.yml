name: Test Status Check

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  status-check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Check TypeScript (if applicable)
      run: |
        if [ -f "tsconfig.json" ]; then
          npx tsc --noEmit
        else
          echo "No TypeScript configuration found, skipping type check"
        fi
      continue-on-error: true
    
    - name: Lint code (if applicable)
      run: |
        if npm list eslint &>/dev/null; then
          npx eslint . --ext .js,.jsx,.ts,.tsx
        else
          echo "ESLint not found, skipping lint check"
        fi
      continue-on-error: true
    
    - name: Check for test files
      run: |
        echo "Checking for test files..."
        if [ -d "tests/playwright" ]; then
          echo "✅ Playwright tests found"
          echo "test_files=true" >> $GITHUB_ENV
        else
          echo "❌ No test files found"
          echo "test_files=false" >> $GITHUB_ENV
        fi
    
    - name: Validate test structure
      if: env.test_files == 'true'
      run: |
        echo "Validating test structure..."
        
        # Check for required test files
        required_files=(
          "playwright.config.js"
          "tests/playwright/auth-flow.spec.js"
          "tests/playwright/dashboard-flow.spec.js"
          "tests/playwright/calendar-flow.spec.js"
          "tests/playwright/settings-flow.spec.js"
          "tests/playwright/log-flow.spec.js"
          "tests/pages/BasePage.js"
          "tests/utils/helpers.js"
          "tests/fixtures/testData.js"
        )
        
        missing_files=()
        for file in "${required_files[@]}"; do
          if [ ! -f "$file" ]; then
            missing_files+=("$file")
          fi
        done
        
        if [ ${#missing_files[@]} -eq 0 ]; then
          echo "✅ All required test files found"
        else
          echo "❌ Missing required test files:"
          printf '%s\n' "${missing_files[@]}"
          exit 1
        fi
    
    - name: Check Playwright configuration
      if: env.test_files == 'true'
      run: |
        echo "Checking Playwright configuration..."
        
        if [ -f "playwright.config.js" ]; then
          # Basic syntax check
          node -c playwright.config.js
          echo "✅ Playwright config syntax is valid"
          
          # Check if config exports properly
          node -e "
            const config = require('./playwright.config.js');
            if (!config || !config.testDir) {
              console.error('❌ Invalid Playwright config');
              process.exit(1);
            }
            console.log('✅ Playwright config structure is valid');
          "
        else
          echo "❌ playwright.config.js not found"
          exit 1
        fi
    
    - name: Check test dependencies
      run: |
        echo "Checking test dependencies..."
        
        # Check if Playwright is installed
        if npm list @playwright/test &>/dev/null; then
          echo "✅ @playwright/test found"
        else
          echo "❌ @playwright/test not found in dependencies"
          exit 1
        fi
        
        # Check package.json scripts
        if jq -e '.scripts["test:e2e"]' package.json > /dev/null; then
          echo "✅ test:e2e script found"
        else
          echo "❌ test:e2e script not found in package.json"
          exit 1
        fi
    
    - name: Validate Page Object Model structure
      if: env.test_files == 'true'
      run: |
        echo "Validating Page Object Model structure..."
        
        page_objects=(
          "tests/pages/AuthPage.js"
          "tests/pages/DashboardPage.js"
          "tests/pages/CalendarPage.js"
          "tests/pages/SettingsPage.js"
          "tests/pages/LogPage.js"
        )
        
        for page in "${page_objects[@]}"; do
          if [ -f "$page" ]; then
            # Basic syntax check
            node -c "$page"
            echo "✅ $page syntax is valid"
          else
            echo "❌ $page not found"
            exit 1
          fi
        done
    
    - name: Test import structure
      if: env.test_files == 'true'
      run: |
        echo "Testing import structure..."
        
        # Test if test files can import dependencies
        node -e "
          try {
            const { test, expect } = require('@playwright/test');
            console.log('✅ Playwright imports work');
          } catch (error) {
            console.error('❌ Playwright import failed:', error.message);
            process.exit(1);
          }
        "
    
    - name: Generate status report
      run: |
        echo "# Test Setup Status Report" > test-status-report.md
        echo "" >> test-status-report.md
        echo "Generated on: $(date)" >> test-status-report.md
        echo "" >> test-status-report.md
        echo "## Test Files Status" >> test-status-report.md
        echo "- Test files found: ${{ env.test_files }}" >> test-status-report.md
        echo "" >> test-status-report.md
        echo "## Dependencies" >> test-status-report.md
        echo "- Node.js: $(node --version)" >> test-status-report.md
        echo "- npm: $(npm --version)" >> test-status-report.md
        if npm list @playwright/test &>/dev/null; then
          echo "- Playwright: $(npm list @playwright/test --depth=0 | grep @playwright/test | cut -d@ -f3)" >> test-status-report.md
        fi
        echo "" >> test-status-report.md
        echo "## Available Test Commands" >> test-status-report.md
        jq -r '.scripts | keys[] | select(test("test|playwright")) | "- npm run \(.)"' package.json >> test-status-report.md
        
        cat test-status-report.md
    
    - name: Upload status report
      uses: actions/upload-artifact@v4
      with:
        name: test-status-report
        path: test-status-report.md
        retention-days: 7